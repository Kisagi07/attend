model Project {
    id                     Int               @id @default(autoincrement())
    fund                   Int
    title                  String
    status                 ProjectStatus     @default(pending)
    priority               Priority
    projectLeadId          Int
    projectLead            users             @relation(fields: [projectLeadId], references: [id], name: "Leader")
    projectMembers         users[]
    transportationSpending Int               @default(0) @map("transportation_spending")
    foodSpending           Int               @default(0) @map("food_spending")
    lodgingSpending        Int               @default(0) @map("lodging_spending")
    entertainmentSpending  Int               @default(0) @map("entertainment_spending")
    createdAt              DateTime          @default(now())
    updatedAt              DateTime          @default(now()) @updatedAt
    activity               ProjectActivity[]
    histories              ProjectHistory[]

    @@map("projects")
}

model ProjectActivity {
    id          Int      @id @default(autoincrement())
    projectId   Int      @map("project_id")
    project     Project  @relation(fields: [projectId], references: [id])
    userId      Int      @map("user_id")
    user        users    @relation(fields: [userId], references: [id])
    dateTime    DateTime @map("date_time")
    description String
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

    @@map("projects_activity")
}

model ProjectHistory {
    id          Int      @id @default(autoincrement())
    projectId   Int      @map("project_id")
    project     Project  @relation(fields: [projectId], references: [id])
    userId      Int      @map("user_id")
    user        users    @relation(fields: [userId], references: [id])
    dateTime    DateTime @map("date_time")
    description String
    file        String?

    @@map("project_histories")
}

enum ProjectStatus {
    in_progress
    pending
    completed
}

enum Priority {
    low
    normal
    high
    urgent
}
